<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  PrimaryButton: Colors  -->
    <LinearGradientBrush x:Key="PrimaryButtonBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FF70A5DC" />
        <GradientStop Offset="1" Color="#FF193D60" />
    </LinearGradientBrush>

    <!--  ToggleButton: Colors  -->
    <LinearGradientBrush x:Key="ToggleButtonBackgroundBrush_Checked" StartPoint="0,0" EndPoint="0,1">
        <!--<GradientStop Color="#FF183351" Offset="0"/>-->
        <GradientStop Offset="0" Color="#FF193D60" />
        <GradientStop Offset="1" Color="#FF692B47" />
    </LinearGradientBrush>

    <!--  PrimaryButton: Supporting Styles  -->

    <!--  InformButton: Styles  -->
    <Style x:Key="MyFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="3,2">
                        <Rectangle
                            Name="r1"
                            Stroke="Black"
                            StrokeDashArray="2 2"
                            StrokeThickness="2" />
                        <Border
                            Name="border"
                            Width="{TemplateBinding ActualWidth}"
                            Height="{TemplateBinding ActualHeight}"
                            BorderThickness="5"
                            CornerRadius="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ShadowStyle">
        <Setter Property="Control.Foreground" Value="DarkBlue" />
    </Style>
    <Style x:Key="InformButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="10,5,10,5" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0.2" Color="#FF6595C6" />
                    <GradientStop Offset="0.85" Color="#FF072142" />
                    <GradientStop Offset="1" Color="#FF18365A" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="border"
                        Padding="8,2"
                        Background="{TemplateBinding Background}"
                        BorderBrush="DarkGray"
                        BorderThickness="1"
                        CornerRadius="3">
                        <Grid>
                            <ContentPresenter
                                Name="contentShadow"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Style="{StaticResource ShadowStyle}">
                                <ContentPresenter.RenderTransform>
                                    <TranslateTransform X="1.0" Y="1.0" />
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter
                                Name="content"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                            <Setter TargetName="contentShadow" Property="Control.Foreground" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0.1" Color="#FF6595C6" />
                                        <GradientStop Offset="0.75" Color="#FF072142" />
                                        <GradientStop Offset="1" Color="#FF18365A" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="content" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ToggleInformButton: Styles -->
    <Style x:Key="ToggleInformButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="10,5,10,5"/>
        <Setter Property="FontFamily" Value="Verdana"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Background" Value="{StaticResource PrimaryButtonBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="border" 
                            BorderThickness="1"
                            Padding="4,2" 
                            BorderBrush="DarkGray" 
                            CornerRadius="3" 
                            Background="{TemplateBinding Background}">
                        <Grid >
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" 
                                              Name="contentShadow" 
                                              Style="{StaticResource ShadowStyle}">
                                <ContentPresenter.RenderTransform>
                                    <TranslateTransform X="1.0" Y="1.0" />
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" 
                                              Name="content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                            <Setter Property="Foreground" Value="#FF4788c8" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderThickness" Value="5"/>
                            <Setter Property="Background" Value="{StaticResource ToggleButtonBackgroundBrush_Checked}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ToggleButtonBackgroundBrush_Checked}"/>
                            <Setter TargetName="content" Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ChannelToggleInformButton: Styles  -->
    <Style x:Key="ChannelToggleInformButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="MinWidth" Value="48" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="BorderBrush" Value="#FF999999" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1">
                        <Grid>
                            <Rectangle x:Name="FocusRecOverlay" Visibility="Collapsed" />
                            <ContentPresenter
                                Name="content"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#1EFFFFFF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#1EFFFFFF" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#1EFFFFFF" />
                            <Setter TargetName="FocusRecOverlay" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource FlatToggleButtonDisabledBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource FlatToggleButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  RepeatInformButton: Styles  -->
    <Style x:Key="RepeatInformButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="10,5,10,5" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    <!--<SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="#FFE7EAEA"/>-->
    <SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="Black" />
    <!--<LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFAEB1AF" Offset="0.1"/>
        <GradientStop Color="White" Offset=".9"/>
    </LinearGradientBrush>-->
    <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.1" Color="#FF303030" />
        <GradientStop Offset=".9" Color="#FF404040" />
    </LinearGradientBrush>
    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomThumbForSlider" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle
                        Width="30"
                        Height="{TemplateBinding Height}"
                        Margin="0,0.333,0,-0.334"
                        Fill="{DynamicResource PrimaryButtonBackgroundBrush}"
                        RadiusX="5"
                        RadiusY="10"
                        Stroke="#FF404050" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyCustomStyleForSlider" TargetType="{x:Type Slider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="{TemplateBinding Height}" MinHeight="{TemplateBinding MinHeight}" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TickBar
                                x:Name="TopTick"
                                Grid.Row="0"
                                Height="4"
                                Fill="{TemplateBinding Foreground}"
                                Placement="Top"
                                Visibility="Collapsed" />
                            <TickBar
                                x:Name="BottomTick"
                                Grid.Row="0"
                                Height="4"
                                Fill="{TemplateBinding Foreground}"
                                Placement="Bottom"
                                Visibility="Collapsed" />
                            <Border
                                x:Name="TrackBackground"
                                Grid.Row="1"
                                Height="6.0"
                                Margin="5,0"
                                VerticalAlignment="Center"
                                Background="{StaticResource HorizontalSliderTrackNormalBackground}"
                                BorderBrush="{StaticResource HorizontalSliderTrackNormalBorder}"
                                BorderThickness="1"
                                CornerRadius="1">
                                <!--  Background="{StaticResource HorizontalSliderTrackNormalBackground}"  -->
                                <Canvas Margin="-6,-1">
                                    <Rectangle
                                        x:Name="PART_SelectionRange"
                                        Height="4.0"
                                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                        StrokeThickness="1.0"
                                        Visibility="Hidden" />
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource CustomThumbForSlider}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Blue Button  -->
    <ControlTemplate x:Key="BlueButtonControl" TargetType="{x:Type Button}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="False">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter TargetName="border" Property="CornerRadius" Value="3" />
                <Setter TargetName="border" Property="BorderBrush" Value="Blue" />
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0" Color="#007dc1" />
                            <GradientStop Offset="1" Color="#0061a7" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0" Color="#0061a7" />
                            <GradientStop Offset="1" Color="#007dc1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="border" Property="BorderBrush" Value="Blue" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0" Color="#007dc1" />
                            <GradientStop Offset="1" Color="#0061a7" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="border" Property="BorderBrush" Value="Blue" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FFADB2B5" />
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#FF838383" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="BlueButton" TargetType="Button">
        <Setter Property="Template" Value="{DynamicResource BlueButtonControl}" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="5,2,5,2" />
    </Style>
    <!--  Blue Button End  -->

</ResourceDictionary>

<!--  UNUSED  -->
<!--
        <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="3">
                        <Rectangle Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                    <GradientStop Color="#FFFFD190" Offset="0.2"/>
                    <GradientStop Color="Orange" Offset="0.85"/>
                    <GradientStop Color="#FFFFD190" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>-->


