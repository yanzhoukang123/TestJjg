<UserControl x:Class="Azure.ScannerTestJig.View.TotalMachine.TotalMachineViewModulecs"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:sys="clr-namespace:System;assembly=mscorlib" 
             xmlns:local="clr-namespace:Azure.ScannerTestJig.View.TotalMachine"
             xmlns:imagingsys="clr-namespace:Azure.ImagingSystem;assembly=Azure.ImagingSystem"
             xmlns:Borders="clr-namespace:ToggleSwitch.Borders;assembly=ToggleSwitch" xmlns:ToggleSwitch="clr-namespace:ToggleSwitch;assembly=ToggleSwitch"
             mc:Ignorable="d" Height="295.371" Width="1114.322">
    <UserControl.Resources>
        <ResourceDictionary>
            <!--Blue Button-->
            <ControlTemplate x:Key="BlueButtonControl" TargetType="{x:Type Button}">
                <Border x:Name="border"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="contentPresenter"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                Focusable="False"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsDefaulted" Value="False">
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Cursor" Value="Hand"></Setter>
                        <Setter Property="CornerRadius" TargetName="border" Value="3"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#007dc1" Offset="0"/>
                                    <GradientStop Color="#0061a7" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Trigger>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#0061a7" Offset="0"/>
                                    <GradientStop Color="#007dc1" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#007dc1" Offset="0"/>
                                    <GradientStop Color="#0061a7" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="False" />
                <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
                <Setter Property="Height" Value="52"/>
                <Setter Property="IsChecked" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Height}">
                                    <Rectangle x:Name="CheckBoxRectangle" Fill="White" Opacity="0.3" RadiusY="5" RadiusX="5"/>
                                    <Rectangle x:Name="CheckBoxRectangleOut" Stroke="#FFABADB3" StrokeThickness="1" RadiusY="5" RadiusX="5"/>
                                    <Grid x:Name="CheckedMark" Height="{TemplateBinding Height}" Width="{TemplateBinding Height}" Visibility="Collapsed" >
                                        <Viewbox>
                                            <Grid>
                                                <Path SnapsToDevicePixels="True" StrokeThickness="3" Data="M1,9 L10,17" Stroke="#3553ad"/>
                                                <Path SnapsToDevicePixels="True" StrokeThickness="3" Data="M8,17 L20,4" Stroke="#3553ad"/>
                                            </Grid>
                                        </Viewbox>
                                    </Grid>
                                </Grid>
                                <ContentPresenter Grid.Column="1" VerticalAlignment="Center" Margin="8,0,0,0"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="CheckedMark" Property="Visibility" Value="Visible"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BlueButton" TargetType="Button">
                <Setter Property="Template" Value="{DynamicResource BlueButtonControl}"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Padding" Value="5,2,5,2"/>
            </Style>
            <!--Blue Button End-->

            <ControlTemplate x:Key="SimpleThumbTemplate" TargetType="Thumb">
                <Grid Background="Transparent">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.25" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unfocused"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Unchecked"/>
                            <VisualState x:Name="Checked"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Borders:OuterGlowBorder OuterGlowSize="4" OuterGlowOpacity="0.15" BorderThickness="0" OuterGlowColor="Black" Background="Transparent" CornerRadius="4" ShadowCornerRadius="8" IsTabStop="False" >
                        <Grid>
                            <Borders:ClippingBorder x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" IsTabStop="False" Background="{TemplateBinding Background}"/>
                            <Borders:ClippingBorder x:Name="BackgroundAnimation" Background="Black" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Black" CornerRadius="4" IsTabStop="False"/>
                            <Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="false" Opacity="0" RadiusY="4" RadiusX="4"/>
                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="4" RadiusX="4" StrokeThickness="1"/>
                        </Grid>
                    </Borders:OuterGlowBorder>
                </Grid>
            </ControlTemplate>
            <Style x:Key="MyLabelHeaderStyle" TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="DarkBlue" />
                <Setter Property="FontSize" Value="25" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="0,0,7,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="148*"/>
            <ColumnDefinition Width="203*"/>
            <ColumnDefinition Width="196*"/>
            <ColumnDefinition Width="280*"/>
            <ColumnDefinition Width="172*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="65*"/>
            <RowDefinition Height="53*"/>
            <RowDefinition Height="56*"/>
            <RowDefinition Height="54*"/>
            <RowDefinition Height="67*"/>

        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Grid.Column="0">
            <Label x:Name="x_motor" Style="{StaticResource MyLabelHeaderStyle}" Content="X-Motor" HorizontalAlignment="Left" Margin="6,10,0,0" VerticalAlignment="Top" FontSize="25"/>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="1">
            <CheckBox x:Name="x_L_limit" IsChecked="{Binding Path=x_L_Limit}"  Content="L-Limit"  FontSize="25"  Style="{StaticResource CheckBoxStyle}"  HorizontalAlignment="Center"  VerticalAlignment="Top"  Width="149" Height="37" FontWeight="Bold" Margin="36,14,40,0"/>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="2">
            <CheckBox x:Name="x_R_limit" IsChecked="{Binding Path=x_R_Limit}"  Content="R-Limit"  FontSize="25"  Style="{StaticResource CheckBoxStyle}"  HorizontalAlignment="Center" VerticalAlignment="Top"  Width="148" Height="37" FontWeight="Bold" Margin="34,15,35,0"/>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="3" x:Name="x_currpos">
            <Label x:Name="x_Range" Style="{StaticResource MyLabelHeaderStyle}" Content="Range" HorizontalAlignment="Left"  VerticalAlignment="Top" FontSize="25" RenderTransformOrigin="0.514,0.973" Margin="25,7,0,0"/>
            <TextBox x:Name="_ChLeftDownPeak"
                          
                            Height="35"
                            FontSize="25"
                            FontWeight="SemiBold"
                            Background="LightBlue"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Text="{Binding CurrentXPos, StringFormat=\{0:F\}, TargetNullValue={x:Static sys:String.Empty}, UpdateSourceTrigger=LostFocus}" Margin="111,14,85,8" />
            <Label x:Name="x_mm" Style="{StaticResource MyLabelHeaderStyle}" Content="mm" HorizontalAlignment="Left"  VerticalAlignment="Top" FontSize="25" Margin="222,7,0,0"/>
        </Grid>

        <Grid Grid.Row="0" Grid.Column="4"   IsEnabled="{Binding x_IsNullEnabled}">
            <Button x:Name="_ScanButton"
            Content="Start"
            Width="111"
            Height="41"
            FontSize="25"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Margin="0,8,32,8"
            Visibility="{Binding x_IsScanVisibility}"
                Command="{Binding Path=MotorXCommand}"
                CommandParameter="{x:Static imagingsys:MotorType.X}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource BlueButton}">
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="x_StopScanButton"
            Content="STOP"
            Width="111"
            Height="42"
            FontSize="14"
            Foreground="Red"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Margin="0,12,32,11"
            Visibility="{Binding x_IsStopVisibility}"
            Command="{Binding Path=StopCommand}"  CommandParameter="{x:Static imagingsys:MotorType.X}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource BlueButton}">
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <Grid Grid.Row="1" Grid.Column="0">
            <Label x:Name="y_motor" Style="{StaticResource MyLabelHeaderStyle}" Content="Y-Motor" HorizontalAlignment="Left" Margin="6,9,0,0" VerticalAlignment="Top" FontSize="25"/>
        </Grid>
        <Grid Grid.Row="1" Grid.Column="1">
            <CheckBox x:Name="y_F_limit" IsChecked="{Binding Path=y_F_Limit}"  Content="F-Limit"  FontSize="25"  Style="{StaticResource CheckBoxStyle}"  HorizontalAlignment="Center" VerticalAlignment="Top"  Width="149" Height="37" FontWeight="Bold" Margin="35,12,41,0"/>
        </Grid>
        <Grid Grid.Row="1" Grid.Column="2">

            <CheckBox x:Name="y_B_limit" IsChecked="{Binding Path=y_B_Limit}"  Content="B-Limit"  FontSize="25"  Style="{StaticResource CheckBoxStyle}"  HorizontalAlignment="Center"  VerticalAlignment="Top"  Width="148" Height="37" FontWeight="Bold" Margin="34,11,35,0"/>
        </Grid>
        <Grid Grid.Row="1" Grid.Column="3" x:Name="y_currpos">
            <Label x:Name="y_Range" Style="{StaticResource MyLabelHeaderStyle}" Content="Range" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="25" Margin="22,0,0,0"/>
            <TextBox x:Name="y_ChLeftDownPeak"
                            Height="35"
                            FontSize="25"
                            FontWeight="SemiBold"
                            Background="LightBlue"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Text="{Binding CurrentYPos, StringFormat=\{0:F\}, TargetNullValue={x:Static sys:String.Empty}, UpdateSourceTrigger=LostFocus}" Margin="112,9,84,9" />
            <Label x:Name="y_mm" Style="{StaticResource MyLabelHeaderStyle}" Content="mm" HorizontalAlignment="Left"  VerticalAlignment="Stretch" FontSize="25" Margin="225,1,0,13"/>
        </Grid>
        <Grid Grid.Row="1" Grid.Column="4" IsEnabled="{Binding y_IsNullEnabled}">
            <Button x:Name="y_ScanButton"
            Content="Start"
            Width="111"
            Height="42"
            FontSize="25"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Margin="0,7,30,4"
            Visibility="{Binding y_IsScanVisibility}"
            Command="{Binding Path=MotorYCommand}" 
                  CommandParameter="{x:Static imagingsys:MotorType.Y}"      >
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource BlueButton}">
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="y_StopScanButton"
            Content="STOP"
            Width="111"
            Height="42"
            FontSize="14"
            Foreground="Red"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Margin="0,5,31,6"
            Visibility="{Binding y_IsStopVisibility}"
            Command="{Binding Path=StopCommand}"
                    CommandParameter="{x:Static imagingsys:MotorType.Y}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource BlueButton}">
                    </Style>
                </Button.Style>
            </Button>
        </Grid>




        <Grid Grid.Row="2" Grid.Column="0">
            <Label x:Name="z_motor" Style="{StaticResource MyLabelHeaderStyle}" Content="Z-Motor" HorizontalAlignment="Left" Margin="6,7,0,0" VerticalAlignment="Top" FontSize="25"/>
        </Grid>
        <Grid Grid.Row="2" Grid.Column="1">
            <CheckBox x:Name="z_L_limit" IsChecked="{Binding Path=z_L_Limit}"  Content="L-Limit"  FontSize="25"  Style="{StaticResource CheckBoxStyle}"  HorizontalAlignment="Center"  VerticalAlignment="Top"  Width="149" Height="37" FontWeight="Bold" Margin="35,10,41,0"/>
        </Grid>
        <Grid Grid.Row="2" Grid.Column="3" x:Name="z_currpos">
            <Label x:Name="z_Range" Style="{StaticResource MyLabelHeaderStyle}" Content="Range" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="25" Margin="22,5,0,0"/>
            <TextBox x:Name="z_ChLeftDownPeak"
                            Height="35"
                            FontSize="25"
                            FontWeight="SemiBold"
                            Background="LightBlue"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Text="{Binding CurrentZPos, StringFormat=\{0:F\}, TargetNullValue={x:Static sys:String.Empty}, UpdateSourceTrigger=LostFocus}" Margin="111,9,85,9" />
            <Label x:Name="z_mm" Style="{StaticResource MyLabelHeaderStyle}" Content="mm" HorizontalAlignment="Left"  VerticalAlignment="Top" FontSize="25" Margin="224,2,0,0"/>
        </Grid>
        <Grid Grid.Row="2" Grid.Column="4" IsEnabled="{Binding z_IsNullEnabled}">

            <Button x:Name="ScanButton"
            Content="Start"
            Width="111"
            Height="40"
            FontSize="25"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Margin="0,8,30,8"
            Visibility="{Binding z_IsScanVisibility}"
            Command="{Binding Path=MotorZCommand}"
                    CommandParameter="{x:Static imagingsys:MotorType.Z}" >
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource BlueButton}">
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="z_StopScanButton"
            Content="STOP"
            Width="111"
            Height="42"
            FontSize="14"
            Foreground="Red"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Margin="0,8,29,6"
            Visibility="{Binding z_IsStopVisibility}"
            Command="{Binding Path=StopCommand}" 
                    CommandParameter="{x:Static imagingsys:MotorType.Z}">
                
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource BlueButton}">
                    </Style>
                </Button.Style>
            </Button>
        </Grid>


        <Grid Grid.Row="3" Grid.Column="0">
            <Label x:Name="led_motor" Style="{StaticResource MyLabelHeaderStyle}" Content="Led-Bar" HorizontalAlignment="Left" Margin="6,4,0,0" VerticalAlignment="Top" FontSize="25"/>
        </Grid>
        <Grid Grid.Row="3" Grid.Column="4">
            <Button x:Name="LED_ScanButton"
            Content="Start"
            Width="111"
            Height="40"
            FontSize="25"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Margin="0,8,29,6"
            Visibility="{Binding led_IsScanVisibility}"
            Command="{Binding Path=LEDCommand}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource BlueButton}">
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="Led_StopScanButton"
            Content="STOP"
            Width="111"
            Height="40"
            FontSize="14"
            Foreground="Red"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Margin="0,8,29,6"
            Visibility="{Binding led_IsStopVisibility}"
            Command="{Binding Path=StopLedCommand}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource BlueButton}">
                    </Style>
                </Button.Style>
            </Button>
        </Grid>


        <Grid Grid.Row="4" Grid.Column="0">
            <Label x:Name="fans_motor" Style="{StaticResource MyLabelHeaderStyle}" Content="Fans-Drawer" HorizontalAlignment="Left" Margin="2,6,0,0" VerticalAlignment="Top" FontSize="25" Width="162"/>
        </Grid>
        <Grid Grid.Row="4" Grid.Column="1">

            <ToggleSwitch:HorizontalToggleSwitch 
                            ThumbTemplate="{StaticResource SimpleThumbTemplate}"
                            FontSize="25"
                            BorderBrush="#FF6A6A6A"
                            UncheckedForeground="White" 
                            UncheckedContent="Off" 
                            CheckedContent="On" 
                            IsChecked="{Binding IsFansDrawerSelected, Mode=TwoWay}"
                            HorizontalAlignment="Center"
                            Width="116" Height="42" Margin="43,11,66,14">
                <ToggleSwitch:HorizontalToggleSwitch.ThumbBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFB3B5B7" Offset="1"/>
                        <GradientStop Color="#FFEDEEEE"/>
                    </LinearGradientBrush>
                </ToggleSwitch:HorizontalToggleSwitch.ThumbBrush>
                <ToggleSwitch:HorizontalToggleSwitch.UncheckedBackground>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFE1E2E2"/>
                        <GradientStop Color="#FF555555"/>
                    </LinearGradientBrush>
                </ToggleSwitch:HorizontalToggleSwitch.UncheckedBackground>
                <ToggleSwitch:HorizontalToggleSwitch.CheckedBackground>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF6E97B7" Offset="1"/>
                        <GradientStop Color="#FF46738A"/>
                    </LinearGradientBrush>
                </ToggleSwitch:HorizontalToggleSwitch.CheckedBackground>
            </ToggleSwitch:HorizontalToggleSwitch>
        </Grid>
        <Grid Grid.Row="4" Grid.Column="2">
            <Label x:Name="fans_motor1" Style="{StaticResource MyLabelHeaderStyle}" Content="Fans-Back" HorizontalAlignment="Left" Margin="35,9,0,0" VerticalAlignment="Top" FontSize="25" Width="162"/>
        </Grid>
        <Grid Grid.Row="4" Grid.Column="3">

            <ToggleSwitch:HorizontalToggleSwitch 
                            ThumbTemplate="{StaticResource SimpleThumbTemplate}"
                            FontSize="25"
                            BorderBrush="#FF6A6A6A"
                            UncheckedForeground="White" 
                            UncheckedContent="Off" 
                            CheckedContent="On" 
                            IsChecked="{Binding IsFansBackSelected, Mode=TwoWay}"
                            HorizontalAlignment="Center"
                            Width="116" Height="42" Margin="39,13,155,12">
                <ToggleSwitch:HorizontalToggleSwitch.ThumbBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFB3B5B7" Offset="1"/>
                        <GradientStop Color="#FFEDEEEE"/>
                    </LinearGradientBrush>
                </ToggleSwitch:HorizontalToggleSwitch.ThumbBrush>
                <ToggleSwitch:HorizontalToggleSwitch.UncheckedBackground>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFE1E2E2"/>
                        <GradientStop Color="#FF555555"/>
                    </LinearGradientBrush>
                </ToggleSwitch:HorizontalToggleSwitch.UncheckedBackground>
                <ToggleSwitch:HorizontalToggleSwitch.CheckedBackground>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF6E97B7" Offset="1"/>
                        <GradientStop Color="#FF46738A"/>
                    </LinearGradientBrush>
                </ToggleSwitch:HorizontalToggleSwitch.CheckedBackground>
            </ToggleSwitch:HorizontalToggleSwitch>
        </Grid>
        <Grid>
        </Grid>

    </Grid>
</UserControl>
