<Window x:Class="Azure.ScannerTestJig.View.APDIVTempCalibration.APDIvTempCalibrationSubWind"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:view1="clr-namespace:Azure.ScannerTestJig.View.APDCalibration"
         xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
       Height="500" Width="638" WindowStartupLocation="CenterScreen" MinHeight="600" MinWidth="1200"
        Closing="Window_Closing" Closed="Window_Closed" WindowState="Normal">
    <Window.Resources>
        <ResourceDictionary>
            <!--Blue Button-->
            <ControlTemplate x:Key="BlueButtonControl" TargetType="{x:Type Button}">
                <Border x:Name="border"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="contentPresenter"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                Focusable="False"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsDefaulted" Value="False">
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Cursor" Value="Hand"></Setter>
                        <Setter Property="CornerRadius" TargetName="border" Value="3"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#007dc1" Offset="0"/>
                                    <GradientStop Color="#0061a7" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Trigger>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#0061a7" Offset="0"/>
                                    <GradientStop Color="#007dc1" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#007dc1" Offset="0"/>
                                    <GradientStop Color="#0061a7" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="BlueButton" TargetType="Button">
                <Setter Property="Template" Value="{DynamicResource BlueButtonControl}"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Padding" Value="5,2,5,2"/>
            </Style>
            <ControlTemplate x:Key="RedButtonControl" TargetType="{x:Type Button}">
                <Border x:Name="border"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="contentPresenter"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                Focusable="False"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsDefaulted" Value="False">
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Cursor" Value="Hand"></Setter>
                        <Setter Property="CornerRadius" TargetName="border" Value="3"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Red" Offset="0"/>
                                    <GradientStop Color="Red" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Trigger>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Red" Offset="0"/>
                                    <GradientStop Color="Red" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Red" Offset="0"/>
                                    <GradientStop Color="Red" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="RedButton" TargetType="Button">
                <Setter Property="Template" Value="{DynamicResource RedButtonControl}"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Padding" Value="5,2,5,2"/>
            </Style>
            <!--Blue Button End-->
            <Style x:Key="MyLabelHeaderStyle" TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="DarkBlue" />
                <Setter Property="FontSize" Value="25" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="0,0,4,0">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="101" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="4,-6,-4,70" Grid.RowSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="0*"/>
                <ColumnDefinition Width="0*"/>
            </Grid.ColumnDefinitions>
            <Label Content="Temperature:" HorizontalAlignment="Left" FontSize="50" Margin="278,222,0,193" Width="318"/>
            <TextBox HorizontalAlignment="Left" FontSize="50" Margin="624,229,0,204" TextWrapping="Wrap" Text="{Binding Path=Temp}" Width="264"  IsEnabled="False" />

        </Grid>
        <Grid Grid.Row="1" Margin="0,36,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Canvas  Grid.Column="0">
                <Button x:Name="startCalibrationBtn" Content="开始标定" HorizontalAlignment="Left"   
                    Command="{Binding Path=StartCalibrationCommand}" 
                    FontSize="25" VerticalAlignment="Top" Width="127" Height="44" Canvas.Top="10" Canvas.Left="647" Margin="0" Panel.ZIndex="1" >
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource BlueButton}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger
                            Value="True"
                            Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.TestItemAPDCalibration.IsChecking}">
                                    <DataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="stopCalibrationBtn" Content="暂停标定" HorizontalAlignment="Left"  
                Command="{Binding StopCalibrationCommand}" 
                FontSize="25" VerticalAlignment="Top" Width="127" Height="44" Canvas.Top="10" RenderTransformOrigin="-0.594,0.807" Canvas.Left="647" Margin="0" >
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource RedButton}" >
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger
                            Value="False"
                            Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.TestItemAPDCalibration.IsChecking}">
                                    <DataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Label x:Name="dateLabel" Content="{Binding Path=TestDate}" HorizontalAlignment="Right" Width="170"
                HorizontalContentAlignment="Right" FontSize="20" VerticalAlignment="Bottom" Canvas.Left="902" Canvas.Top="26"/>
                <Label x:Name="timeLabel" Content="{Binding Path=TestTime}" HorizontalAlignment="Right" Width="70" 
                HorizontalContentAlignment="Right" FontSize="20" VerticalAlignment="Bottom" Canvas.Left="952" Canvas.Top="-2"/>
            </Canvas>
        </Grid>
    </Grid>
</Window>

