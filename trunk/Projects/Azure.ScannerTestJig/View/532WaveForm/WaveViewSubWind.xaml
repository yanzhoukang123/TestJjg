<Window x:Class="Azure.ScannerTestJig.View._532WaveForm.WaveViewSubWind"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Azure.ScannerTestJig.View._532WaveForm"
        mc:Ignorable="d"
        xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:Borders="clr-namespace:ToggleSwitch.Borders;assembly=ToggleSwitch"
        Title="WaveViewSubWind"   Height="900" Width="1200" Closed="Window_Closed" WindowStartupLocation="CenterScreen" Closing="Window_Closing">
    <Window.Resources>
        <ResourceDictionary>
            <!--Blue Button-->
            <ControlTemplate x:Key="BlueButtonControl" TargetType="{x:Type Button}">
                <Border x:Name="border"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="contentPresenter"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                Focusable="False"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsDefaulted" Value="False">
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Cursor" Value="Hand"></Setter>
                        <Setter Property="CornerRadius" TargetName="border" Value="3"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#007dc1" Offset="0"/>
                                    <GradientStop Color="#0061a7" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Trigger>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#0061a7" Offset="0"/>
                                    <GradientStop Color="#007dc1" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#007dc1" Offset="0"/>
                                    <GradientStop Color="#0061a7" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="False" />
                <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
                <Setter Property="Height" Value="52"/>
                <Setter Property="IsChecked" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Height}">
                                    <Rectangle x:Name="CheckBoxRectangle" Fill="White" Opacity="0.3" RadiusY="5" RadiusX="5"/>
                                    <Rectangle x:Name="CheckBoxRectangleOut" Stroke="#FFABADB3" StrokeThickness="1" RadiusY="5" RadiusX="5"/>
                                    <Grid x:Name="CheckedMark" Height="{TemplateBinding Height}" Width="{TemplateBinding Height}" Visibility="Collapsed" >
                                        <Viewbox>
                                            <Grid>
                                                <Path SnapsToDevicePixels="True" StrokeThickness="3" Data="M1,9 L10,17" Stroke="#3553ad"/>
                                                <Path SnapsToDevicePixels="True" StrokeThickness="3" Data="M8,17 L20,4" Stroke="#3553ad"/>
                                            </Grid>
                                        </Viewbox>
                                    </Grid>
                                </Grid>
                                <ContentPresenter Grid.Column="1" VerticalAlignment="Center" Margin="8,0,0,0"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="CheckedMark" Property="Visibility" Value="Visible"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BlueButton" TargetType="Button">
                <Setter Property="Template" Value="{DynamicResource BlueButtonControl}"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Padding" Value="5,2,5,2"/>
            </Style>
            <!--Blue Button End-->
            <ControlTemplate x:Key="RedButtonControl" TargetType="{x:Type Button}">
                <Border x:Name="border"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="contentPresenter"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                Focusable="False"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsDefaulted" Value="False">
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Cursor" Value="Hand"></Setter>
                        <Setter Property="CornerRadius" TargetName="border" Value="3"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Red" Offset="0"/>
                                    <GradientStop Color="Red" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Trigger>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Red" Offset="0"/>
                                    <GradientStop Color="Red" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" TargetName="border">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Red" Offset="0"/>
                                    <GradientStop Color="Red" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="RedButton" TargetType="Button">
                <Setter Property="Template" Value="{DynamicResource RedButtonControl}"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Padding" Value="5,2,5,2"/>
            </Style>
            <ControlTemplate x:Key="SimpleThumbTemplate" TargetType="Thumb">
                <Grid Background="Transparent">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.25" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unfocused"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Unchecked"/>
                            <VisualState x:Name="Checked"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Borders:OuterGlowBorder OuterGlowSize="4" OuterGlowOpacity="0.15" BorderThickness="0" OuterGlowColor="Black" Background="Transparent" CornerRadius="4" ShadowCornerRadius="8" IsTabStop="False" >
                        <Grid>
                            <Borders:ClippingBorder x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" IsTabStop="False" Background="{TemplateBinding Background}"/>
                            <Borders:ClippingBorder x:Name="BackgroundAnimation" Background="Black" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Black" CornerRadius="4" IsTabStop="False"/>
                            <Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="false" Opacity="0" RadiusY="4" RadiusX="4"/>
                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="4" RadiusX="4" StrokeThickness="1"/>
                        </Grid>
                    </Borders:OuterGlowBorder>
                </Grid>
            </ControlTemplate>
            <Style x:Key="MyLabelHeaderStyle" TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="DarkBlue" />
                <Setter Property="FontSize" Value="25" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <ScrollViewer >
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="8*"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <local:WaveViewChart x:Name="charttt"></local:WaveViewChart>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="306"/>
                    <ColumnDefinition Width="213"/>
                    <ColumnDefinition Width="291"/>
                    <ColumnDefinition Width="382"/>
                    <ColumnDefinition Width="503"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="51*"/>
                    <RowDefinition Height="52*"/>
                    <RowDefinition Height="57*"/>
                    <RowDefinition Height="57*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="1" Grid.Column="0" >
                    <Label  Style="{StaticResource MyLabelHeaderStyle}" HorizontalAlignment="Left" Margin="21,6,0,0" VerticalAlignment="Top" FontSize="15" Width="94" Height="33">
                        <TextBlock TextWrapping="NoWrap"
Text="激光器编号:" Height="21" Width="80" />
                    </Label>
                    <TextBox x:Name="FileNameTextBox"
                            Height="35"
                            FontSize="25"
                            FontWeight="SemiBold"
                            VerticalAlignment="Top"
                            Text="{Binding LaserNumber,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,  TargetNullValue={x:Static sys:String.Empty}}"  Margin="120,5,33,0" />
                </Grid>
                <Grid Grid.Row="1" Grid.Column="1" >
                    <Label  Style="{StaticResource MyLabelHeaderStyle}" HorizontalAlignment="Left" Margin="19,6,0,0" VerticalAlignment="Top" FontSize="15" Width="83" Height="33">
                        <TextBlock TextWrapping="NoWrap"
Text="TEC温度:" Height="21" Width="72" />
                    </Label>
                    <TextBox x:Name="GetCurrentTecTempTextBox"
                            Height="35"
                            FontSize="25"
                            FontWeight="SemiBold"
                            VerticalAlignment="Top"
                            Text="{Binding GetCurrentTecTempValue,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,  TargetNullValue={x:Static sys:String.Empty}}" IsEnabled="False" Margin="106,7,9,0" />
                </Grid>
                <Grid Grid.Column="0" Grid.ColumnSpan="3">
                    <Label Content="激光器电流:" HorizontalAlignment="Right" Margin="0,6,654,0" VerticalAlignment="Top" FontSize="25" FontWeight="Bold" Width="148"/>
                    <TextBox x:Name="FileNameTextBox11"
                            Height="36"
                            FontSize="25"
                            FontWeight="SemiBold"
                            VerticalAlignment="Top"
                            Text="{Binding StartLaserNumber,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,  TargetNullValue={x:Static sys:String.Empty}}"  Margin="151,10,582,0" />
                    <Label  Content="--" HorizontalAlignment="Right" Margin="0,2,550,0" VerticalAlignment="Top" FontSize="25" FontWeight="Bold" Width="29"/>
                    <TextBox x:Name="FileNameTextBox1111"
                            Height="36"
                            FontSize="25"
                            FontWeight="SemiBold"
                            VerticalAlignment="Top"
                            Text="{Binding EndLaserNumber,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,  TargetNullValue={x:Static sys:String.Empty}}"  Margin="261,10,465,0" />
                    <Label Content="步进(mA):" HorizontalAlignment="Right" Margin="0,6,311,0" VerticalAlignment="Top" FontSize="25" FontWeight="Bold" Width="148"/>
                    <TextBox x:Name="FileNameTextBox13"
                            Height="36"
                            FontSize="25"
                            FontWeight="SemiBold"
                            VerticalAlignment="Top"
                            Text="{Binding LaserNumberStep,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,  TargetNullValue={x:Static sys:String.Empty}}"  Margin="480,10,253,0" />
                    <Label Content="步进间隔(s):" HorizontalAlignment="Right" Margin="0,6,72,0" VerticalAlignment="Top" FontSize="25" FontWeight="Bold" Width="172"/>
                    <TextBox x:Name="FileNameTextBox13_Copy"
                    Height="36"
                    FontSize="25"
                    FontWeight="SemiBold"
                    VerticalAlignment="Top"
                    Text="{Binding LaserNumberTime, Mode=TwoWay, TargetNullValue={x:Static sys:String.Empty}, UpdateSourceTrigger=PropertyChanged}"  Margin="714,10,3,0" />

                </Grid>
                <Grid Grid.Row="2" Grid.Column="3">
                    <Label x:Name="COMNumberCoeff" Content="COM:" HorizontalAlignment="Right" Margin="0,3,241,0" VerticalAlignment="Top" FontSize="25" FontWeight="Bold" Width="85"/>
                    <ComboBox x:Name="COMNumberCoeffComboBox" HorizontalAlignment="Right" Margin="0,7,102,0" VerticalAlignment="Top" Width="127" FontSize="25"
                  ItemsSource="{Binding Path=COMNumberCoeffOptions}"
                  SelectedItem="{Binding Path=SelectedCOMNumberCoeff}"/>
                </Grid>
                <Grid Grid.Row="0" Grid.Column="3">
                    <Label x:Name="BAUDNumberCoeff" Content="波特率:" HorizontalAlignment="Right" Margin="0,6,240,0" VerticalAlignment="Top" FontSize="25" FontWeight="Bold" Width="104" RenderTransformOrigin="-0.312,0.56"/>
                    <ComboBox x:Name="BAUDNumberCoeffComboBox" HorizontalAlignment="Right" Margin="0,8,112,0" VerticalAlignment="Top" Width="127" FontSize="25"
                  ItemsSource="{Binding Path=BAUDNumberCoeffOptions}"
                  SelectedItem="{Binding Path=SelectedBAUDNumberCoeff}"/>
                </Grid>
                <Grid Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" >
                    <Label  Style="{StaticResource MyLabelHeaderStyle}" HorizontalAlignment="Left" Margin="108,11,0,0" VerticalAlignment="Top" FontSize="15" Width="169" Height="33">
                        <TextBlock TextWrapping="NoWrap"
Text="激光器电流(0~330mA):" Height="21" Width="166" />
                    </Label>
                    <TextBox x:Name="jiguangNameTextBox"
                            Height="35"
                            FontSize="25"
                            FontWeight="SemiBold"
                            VerticalAlignment="Top"
                            Text="{Binding LaserCurrentValue,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,  TargetNullValue={x:Static sys:String.Empty}}"  Margin="293,8,242,0" />
                    <Button x:Name="jiguangWaveButton"
            Content="Write"
            Height="41"
            FontSize="20"
            Command="{Binding Path=LaserCurrentCommand}" Margin="451,4,105,8" >
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource BlueButton}">
                            </Style>
                        </Button.Style>
                    </Button>

                </Grid>
                <Grid Grid.Row="2" Grid.Column="0" >
                    <Button x:Name="Data532WaveButton"
            Content="导入数据"
            Height="41"
            FontSize="20"
            Command="{Binding Path=Data532WaveCommand}" Margin="75,10,68,10">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource BlueButton}">
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                <Grid Grid.Row="2" Grid.Column="1" >
                    <Button x:Name="Out532WaveButton"
            Content="导出数据"
            Height="41"
            FontSize="20"
            Command="{Binding Path=Out532WaveCommand}" Margin="31,10,38,9" >
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource BlueButton}">
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                <Grid Grid.Row="3" Grid.Column="3" >
                    <Button x:Name="StartWaveButton"
            Content="开始"
            Height="41"
            FontSize="20"
            Click="StartWaveButton_Click"
            Command="{Binding Path=StartWaveCommand}" Margin="148,5,96,11">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource BlueButton}">
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                <Grid Grid.Row="2" Grid.Column="2" >
                    <Label  Style="{StaticResource MyLabelHeaderStyle}" HorizontalAlignment="Left" Margin="3,10,0,0" VerticalAlignment="Top" FontSize="15" Width="83" Height="33">
                        <TextBlock TextWrapping="NoWrap"
Text="光功率:" Height="21" Width="72" />
                    </Label>
                    <TextBox x:Name="GetLaserPowerTextBox"
                            Height="35"
                            FontSize="25"
                            FontWeight="SemiBold"
                            VerticalAlignment="Top"
                            Text="{Binding GetLaserPowerValue,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,  TargetNullValue={x:Static sys:String.Empty}}" IsEnabled="False" Margin="71,11,120,0" />
                    <Button x:Name="ji1guangWaveButton"
            Content="Read"
            Height="41"
            FontSize="20"
            Command="{Binding Path=GetLaserPowerCommand}" Margin="180,7,9,9" >
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource BlueButton}">
                            </Style>
                        </Button.Style>
                    </Button>

                </Grid>
            </Grid>
        </Grid>
    </ScrollViewer>
</Window>
