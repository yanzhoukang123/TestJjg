<UserControl x:Class="Azure.ScannerEUI.View.ImageViewer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:wpfFramework="clr-namespace:Azure.WPF.Framework;assembly=Azure.WPF.Framework"
             xmlns:local="clr-namespace:Azure.ScannerEUI.View"
             mc:Ignorable="d" 
             x:Name="ImageViewerControl"
             d:DesignHeight="480"
             d:DesignWidth="800"
            
             >
    
    <UserControl.Resources>
        <ResourceDictionary>
            <!--<wpfFramework:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"></wpfFramework:BooleanToVisibilityConverter>-->
            <!--<ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/cSeries.Resources;component/ButtonStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>-->

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="15" />
            </Style>

            <!-- Data-template for documents that appear in the list of open documents -->
            <!--<DataTemplate
                DataType="{x:Type local:FileViewModel}">
                <TextBlock 
                    Text="{Binding Title}" 
                    ToolTip="{Binding ToolTip}"
                />
            </DataTemplate>-->
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Name="gridLayoutRoot" >
        <Grid.RowDefinitions>
            <RowDefinition Height="450*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--
        <Viewbox Name="viewBoxContainer">
            <Grid Name="gridContainer">
                <Image Name="imageBackground"  Source="Images/background.jpg" Stretch="None"/>

                <lib:DrawingCanvas x:Name="drawingCanvas" Background="#00000000"
                    Width="{Binding ElementName=imageBackground, Path=ActualWidth, Mode=OneWay}"
                    Height="{Binding ElementName=imageBackground, Path=ActualHeight, Mode=OneWay}"
                    />
            </Grid>
        </Viewbox>
        -->
        <Border x:Name="_ImageBorder" Grid.Row="0"
            BorderBrush="#ABC7DF" >
            <ScrollViewer x:Name="_ScrollViewer" 
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                VerticalScrollBarVisibility="Disabled">
                <Canvas x:Name="_DisplayCanvas" Background="#FF091B24" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsManipulationEnabled="False"  MouseMove="InkCanvas_MouseMove" MouseRightButtonDown="InkCanvas_MouseRightButtonDown" MouseRightButtonUp="InkCanvas_MouseRightButtonUp">
                    <Canvas.RenderTransform>
                        <MatrixTransform></MatrixTransform>
                    </Canvas.RenderTransform>
                    <Image x:Name="_DisplayImage"
                          
                            Source="{Binding Path=DisplayImage, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                            Width="{Binding ElementName=_DisplayCanvas, Path=ActualWidth}"
                            Height="{Binding ElementName=_DisplayCanvas, Path=ActualHeight}"
                            Canvas.Left="0"
                            Canvas.Top="0"
                            OpacityMask="{x:Null}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            IsManipulationEnabled="True"
                            ManipulationStarting="_DisplayImage_ManipulationStarting"
                            ManipulationCompleted="_DisplayImage_ManipulationCompleted"
                            ManipulationDelta="_DisplayImage_ManipulationDelta"
                            MouseMove="_DisplayImage_MouseMove"
                            SizeChanged="_DisplayImage_SizeChanged"
                            Stretch="Uniform"
                            RenderOptions.BitmapScalingMode="HighQuality" Cursor="Hand" MouseEnter="_DisplayImage_MouseEnter" MouseLeave="_DisplayImage_MouseLeave">
                    </Image>
                    <Thumb Opacity="0.2" x:Name="_Thumb"
                        Background="Black"
                        Width="{Binding ElementName=_DisplayCanvas, Path=ActualWidth}"
                        Height="{Binding ElementName=_DisplayCanvas, Path=ActualHeight}"
                        DragDelta="_Thumb_DragDelta"
                        OpacityMask="{x:Null}"
                        Foreground="{x:Null}"
                        UseLayoutRounding="False"
                        Canvas.Left="0"
                        Canvas.Top="0"
                        Visibility="Hidden">
                    </Thumb>
                </Canvas>
            </ScrollViewer>
        </Border>

        <!--<Border Name="_ImageBorder">
            <ScrollViewer x:Name="_ScrollViewer"
                      VerticalScrollBarVisibility="Disabled">
                <Grid>
                    <Image Name ="_ImageSource"
                           Source="{Binding Path=ImageSource, NotifyOnTargetUpdated=True}" 
                           Opacity="1"
                           Stretch="None"
                           RenderOptions.BitmapScalingMode="HighQuality"
                           MouseMove="_ImageSource_MouseMove"
                           SizeChanged="_ImageSource_SizeChanged"
                           Width="{Binding ElementName=_ScrollViewer, Path=ActualWidth}"
                           Height="{Binding ElementName=_ScrollViewer, Path=ActualHeight}">
                    </Image>
                    <drawlib:DrawingCanvas Name="_DrawingCanvas" Tool="None" Background="#00000000"
                        Width="{Binding ElementName=_ImageSource, Path=ActualWidth, Mode=OneWay}"
                        Height="{Binding ElementName=_ImageSource, Path=ActualHeight, Mode=OneWay}"
                        ActualScale="{Binding Path=ZoomLevel, Mode=OneWay}">
                    </drawlib:DrawingCanvas>
                </Grid>
            </ScrollViewer>
        </Border>-->
        
        <!--<GridSplitter Grid.Row="1"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Top" ResizeDirection="Rows"
                      />

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="9*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <Label Grid.Column="0">
                Scale
            </Label>

            <Slider Grid.Column="1" Name="sliderScale"
                    Orientation="Horizontal" Minimum="0.2" Maximum="5.0"
                    Margin="10,5,10,5"
                    Value="1.0"
                />

            <Label Grid.Column="2" Content="{Binding ElementName=sliderScale, Path=Value, Mode=OneWay,
                   Converter={StaticResource convDoubleDecimal}, ConverterParameter=2}"/>
        </Grid>-->

        <!--<Border Name="_ImageBorder"
                BorderBrush="#ABC7DF"
                BorderThickness="2">
            <ScrollViewer Name="_ImageViewer"
                          Grid.Row="0"
                          VerticalScrollBarVisibility="Disabled"
                          Margin="0,0,0,3">
                <Canvas Name="_ImageCanvas"
                        Background="#FF091B24"
                        
                        IsManipulationEnabled="False">
                    <Canvas.RenderTransform>
                        <MatrixTransform></MatrixTransform>
                    </Canvas.RenderTransform>
                    <Image Name="_ImageSource"
                           Source="{Binding Path=ImageSource, NotifyOnTargetUpdated=True}" 
                           Width="{Binding ElementName=_ImageCanvas, Path=ActualWidth}"
                           Height="{Binding ElementName=_ImageCanvas, Path=ActualHeight}"
                           OpacityMask="{x:Null}"
                           RenderOptions.BitmapScalingMode="HighQuality"
                           MouseMove="_ImageSource_MouseMove"
                           IsManipulationEnabled="True"
                           >
                        <Image.RenderTransform>
                            <MatrixTransform></MatrixTransform>
                        </Image.RenderTransform>
                    </Image>
                    
                    <Thumb Opacity="0.2"
                           Name="_Thumb"
                           Background="Black"
                           Width="{Binding ElementName=_ImageCanvas, Path=ActualWidth}"
                           Height="{Binding ElementName=_ImageCanvas, Path=ActualHeight}"
                           OpacityMask="{x:Null}"
                           Foreground="{x:Null}"
                           UseLayoutRounding="False"
                           Canvas.Left="0"
                           Canvas.Top="0"
                           Visibility="Hidden">
                    </Thumb>
                    
                    <drawlib:DrawingCanvas Name="_DrawingCanvas" Tool="None"
                        Width="{Binding ElementName=_ImageSource, Path=ActualWidth, Mode=OneWay}"
                        Height="{Binding ElementName=_ImageSource, Path=ActualHeight, Mode=OneWay}"
                        ActualScale="{Binding Path=ZoomLevel, Mode=OneWay}">
                    </drawlib:DrawingCanvas>
                    
                </Canvas>
            </ScrollViewer>
        </Border>-->
        
        <!--<local:ImageOverviewPaneView x:Name="_ImageOverviewOverlay"
                                     Grid.Row="0" 
                                     Opacity="0.8"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"
                                     MinHeight="290" 
                                     MinWidth="400"
                                     Visibility="{Binding Path=ShowImgTag, Converter={StaticResource booleanToVisibility}, UpdateSourceTrigger=PropertyChanged}"
                                     />-->

        <!--<local:ApplyMarkerControl x:Name="_ApplyMarkerControl"
                                     Grid.Row="0" 
                                     Opacity="0.8"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"
                                     Visibility="{Binding Path=ShowApplyMarkerControl, Converter={StaticResource booleanToVisibility}, UpdateSourceTrigger=PropertyChanged}"
                                     />-->

        <!--Image  Name="DisplayedImage"  Source="{Binding Path=ImageSource, NotifyOnTargetUpdated=True}" 
                            TargetUpdated="OnImageUpdated"
                            RenderTransformOrigin="0.722,0.713" Stretch="Fill"  Margin="5,5,5,5"/-->
        <!-- ListBox that displays the list of open documents. -->
        <!--ListBox
            x:Name="documentsListBox"
            Grid.Row="0"
            ItemsSource="{Binding Documents}"
            SelectedItem="{Binding ActiveDocument}"
            /-->

        <!-- Simple toolbar at the bottom of the pane.  Click="CloseSelected_Click" -->
        <!--StackPanel
            Grid.Row="1"
            Orientation="Horizontal"
            >
            <Button
                ToolTip="Close the selected document."
               
                >
                Close Selected TargetUpdated="OnZoomUpdated"
            </Button>
        </StackPanel-->

        <local:ImageInfoPanel x:Name="_ImageInfoPanel" Grid.Row="0" 
            Opacity="0.85"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            MinWidth="400"
            Visibility="{Binding Path=IsShowImageInfo, Converter={StaticResource boolToVisibileHiddenConverter}, UpdateSourceTrigger=PropertyChanged}" />

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="406*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="392*" />
            </Grid.ColumnDefinitions>

            <StackPanel x:Name="_ZoomLevelPanel" Orientation="Horizontal"
                HorizontalAlignment="Left">
                <TextBlock Text="X:"
                    Margin="4,0" 
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"/>
                <TextBlock x:Name="_PixelX"
                    MinWidth="48" 
                    FontWeight="Bold"
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Left"
                Text="{Binding Path=PixelX}"/>
                <TextBlock Text="Y:"
                    Margin="4,0" 
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"/>
                <TextBlock x:Name="_PixelY"
                    MinWidth="48" 
                    FontWeight="Bold"
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Left"
                    Text="{Binding Path=PixelY}"/>
                <TextBlock Text="Intensity:"
                    Margin="4,0" 
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"/>
                <TextBlock x:Name="_PixelIntensity"
                    MinWidth="60" 
                    FontWeight="Bold"
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Left"
                    Text="{Binding Path=PixelIntensity}"/>
                
                <!--<TextBlock Text="Zoom Ratio:"
                    Margin="5,0" 
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"
                    FontSize="16"/>-->
                <TextBlock x:Name="_ZoomUpdate"
                    Text="{Binding Path=ZoomingType, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                    TargetUpdated="OnZoomUpdated"
                    Visibility="Hidden"/>
                <!--<TextBlock x:Name="ZoomLevelValue"
                    Text="{Binding Path=ZoomLevelString, UpdateSourceTrigger=PropertyChanged,  Mode=TwoWay}"
                    Visibility="Hidden"
                    />-->
                <!--<TextBlock Name="showGrid"
                    Visibility="{Binding Path=ShowGrid, Converter={StaticResource booleanToVisibility}}"
                    MinWidth="1" 
                    Foreground="White"
                    FontWeight="Bold"
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Left"
                    FontSize="16"/>-->

                <!--<TextBlock x:Name="_CropVisibility"
                    Width="1"
                    Visibility="{Binding Path=IsCropping, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource booleanToVisibilityConverter}, FallbackValue=Collapsed}"
                    TargetUpdated="_CropVisibility_TargetUpdated"/>-->

                <!--<TextBlock Name="_TriggerGetRect"
                    Width="1"
                    Visibility="{Binding Path=IsTriggerGetCropRect, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource booleanToVisibilityConverter}, FallbackValue=Collapsed}"
                    TargetUpdated="_TriggerGetCropRect_TargetUpdated"/>-->

                <!--<TextBlock x:Name="_cropStartX"
                    Text="{Binding CropX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Visibility="Collapsed" />-->
                <!--<TextBlock x:Name="_cropStartY"
                    Text="{Binding CropY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Visibility="Collapsed" />-->
                <!--<TextBlock x:Name="_cropWidth"
                    Text="{Binding CropWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Visibility="Collapsed" />-->
                <!--<TextBlock x:Name="_cropHeight"
                    Text="{Binding CropHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Visibility="Collapsed" />-->

                <!--<TextBlock x:Name="tblkClippingRectangle"
                    VerticalAlignment="Center"
                    Margin="5,1"
                    Visibility="{Binding Path=IsCropping, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource booleanToVisibilityConverter}}"
                    Text=""
                    TextWrapping="Wrap"/>-->
            </StackPanel>

        </Grid>

    </Grid>

</UserControl>
